---
import Layout from "../layouts/HomeLayout.astro";

const charts = [
  { 
    name: "Chart.js Style Bar Chart", 
    description: "Headless chart implementation inspired by Chart.js styling",
    image: "/bar-chart/chartjs.png", 
    link: "/charts/bar/chartjs" 
  },
  {
    name: "Chart.js Style Bar Chart with Radius",
    description: "Headless chart implementation inspired by Chart.js styling with rounded corners",
    image: "/bar-chart/chartjs-radius.png",
    link: "/charts/bar/chartjs-radius"
  },
  { 
    name: "Nivo Style Bar Chart", 
    description: "Headless chart implementation inspired by Nivo styling",
    image: "/bar-chart/nivo.png", 
    link: "/charts/bar/nivo" 
  },
  { 
    name: "Highcharts Style Bar Chart", 
    description: "Headless chart implementation inspired by Highcharts styling",
    image: "/bar-chart/highchart.png", 
    link: "/charts/bar/highchart" 
  },
  { 
    name: "Recharts Style Bar Chart", 
    description: "Headless chart implementation inspired by Recharts styling",
    image: "/bar-chart/rechart.png", 
    link: "/charts/bar/rechart" 
  },
  {
    name: "ECharts Style Bar Chart",
    description: "Headless chart implementation inspired by ECharts",
    link: "/charts/bar/echarts",
    image: "/bar-chart/echarts.png"
  },
  { 
    name: "Toast Style Bar Chart", 
    description: "Headless chart implementation inspired by Toast UI Chart styling",
    image: "/bar-chart/toast.png", 
    link: "/charts/bar/toast" 
  },
  { 
    name: "Chartjs Style Line Chart", 
    description: "Headless chart implementation inspired by Chart.js styling",
    image: "/line-chart/chartjs.png", 
    link: "/charts/line/chartjs" 
  },
  { 
    name: "Nivo Style Line Chart", 
    description: "Headless chart implementation inspired by Nivo styling",
    image: "/line-chart/nivo.png", 
    link: "/charts/line/nivo" 
  },
  { 
    name: "Toast Style Line Chart", 
    description: "Headless chart implementation inspired by Toast UI Chart styling",
    image: "/line-chart/toast.png", 
    link: "/charts/line/toast" 
  },
  { 
    name: "ECharts Style Line Chart", 
    description: "Headless chart implementation inspired by ECharts styling",
    image: "/line-chart/echarts.png", 
    link: "/charts/line/echarts" 
  },
  {
    name: "Toast UI Style Bubble Chart",
    description: "Headless chart implementation inspired by Toast UI Charts styling",
    image: "/bubble-chart/toast.png",
    link: "/charts/bubble/toast"
  },
  { 
    name: "Toast Style Area Chart", 
    description: "A headless-chart example inspired by Toast Chart using the same color scheme",
    image: "/area-chart/toast.png", 
    link: "/charts/area/toast" 
  },
  { 
    name: "Toast Style Scatter Chart", 
    description: "A headless-chart example inspired by Toast Chart using the same color scheme",
    image: "/scatter-chart/toast.png", 
    link: "/charts/scatter/toast" 
  },
  { 
    name: "Toast Style Heatmap Chart", 
    description: "A headless-chart example inspired by Toast Chart using the same color scheme",
    image: "/heatmap-chart/toast.png", 
    link: "/charts/heatmap/toast" 
  }
];
---

<Layout>
  <section class="hero">
    <div class="hero-content neu-card">
      <div class="hero-badge neu-inset">
        <span class="gradient-text">Headless Charts</span>
      </div>
      <h1 class="hero-title">
        <span class="title-line">Tired of</span>
        <span class="title-line gradient-text">Chart Limitations?</span>
      </h1>
      <p class="hero-description">
        <span class="hero-icon">âœ¨</span> Copy, Paste, Done!<br/>
        <span class="hero-icon">ðŸŽ¨</span> Ultimate Freedom in Chart Customization<br/>
        <span class="hero-icon">ðŸš€</span> Zero Restrictions
      </p>
      <div class="hero-actions">
        <a href="/docs" class="neu-button primary">
          Get Started
        </a>
        <a href="/charts" class="neu-button">
          View Charts
        </a>
      </div>
    </div>
    <div class="hero-orbs">
      <div class="orb orb-1"></div>
      <div class="orb orb-2"></div>
      <div class="orb orb-3"></div>
    </div>
  </section>

  <section class="charts-grid">
    {charts.map((chart, index) => (
      <a class="chart-card neu-card" href={chart.link} style={`animation-delay: ${index * 0.05}s`}>
        <div class="chart-image neu-inset">
          <img src={chart.image} alt={chart.name} loading="lazy" />
        </div>
        <div class="chart-info">
          <h2>{chart.name}</h2>
          <p>{chart.description}</p>
        </div>
        <div class="chart-hover-indicator">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M5 12h14m0 0l-7-7m7 7l-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      </a>
    ))}
  </section>
</Layout>

<style>
  .hero {
    position: relative;
    padding: 6rem 2rem 4rem;
    overflow: hidden;
  }
  
  .hero-content {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    padding: 3rem;
    text-align: center;
    z-index: 1;
  }
  
  .hero-badge {
    display: inline-block;
    padding: 0.5rem 1.5rem;
    border-radius: 24px;
    margin-bottom: 2rem;
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }
  
  .hero-title {
    font-size: clamp(2.5rem, 6vw, 4rem);
    font-weight: 800;
    margin-bottom: 1.5rem;
    line-height: 1.1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .title-line {
    display: block;
  }
  
  .hero-description {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: var(--neu-text-secondary);
    margin: 0 auto 3rem;
    max-width: 600px;
    line-height: 1.8;
  }
  
  .hero-icon {
    display: inline-block;
    margin-right: 0.5rem;
    font-size: 1.25em;
  }
  
  .hero-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .neu-button.primary {
    background: linear-gradient(135deg, var(--neu-accent) 0%, var(--neu-accent-light) 100%);
    color: white;
    box-shadow: 
      8px 8px 16px rgba(123, 97, 255, 0.2),
      -8px -8px 16px rgba(255, 255, 255, 0.7);
  }
  
  .neu-button.primary:hover {
    transform: translateY(-3px);
    box-shadow: 
      12px 12px 24px rgba(123, 97, 255, 0.3),
      -12px -12px 24px rgba(255, 255, 255, 0.8);
  }
  
  /* Animated background orbs */
  .hero-orbs {
    position: absolute;
    inset: 0;
    overflow: hidden;
    z-index: 0;
  }
  
  .orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    opacity: 0.3;
    animation: float 20s infinite ease-in-out;
  }
  
  .orb-1 {
    width: 400px;
    height: 400px;
    background: linear-gradient(135deg, var(--neu-accent), var(--neu-accent-light));
    top: -200px;
    left: -200px;
    animation-delay: 0s;
  }
  
  .orb-2 {
    width: 300px;
    height: 300px;
    background: linear-gradient(135deg, #7b61ff, #b794f6);
    bottom: -150px;
    right: -150px;
    animation-delay: 7s;
  }
  
  .orb-3 {
    width: 250px;
    height: 250px;
    background: linear-gradient(135deg, #9d8bff, #e9d5ff);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation-delay: 14s;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    33% {
      transform: translate(30px, -30px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
  }

  .charts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2rem;
    padding: 2rem;
    max-width: 1400px;
    margin: 0 auto;
  }

  .chart-card {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .chart-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: var(--neu-shadow-lg);
  }
  
  .chart-card:hover .chart-hover-indicator {
    transform: translateX(0);
    opacity: 1;
  }

  .chart-image {
    width: 100%;
    aspect-ratio: 1.2;
    background: var(--neu-bg-alt);
    padding: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .chart-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .chart-card:hover .chart-image img {
    transform: scale(1.05);
  }

  .chart-info {
    padding: 1.5rem;
  }

  .chart-info h2 {
    margin: 0;
    font-size: 1.25rem;
    color: var(--neu-text);
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .chart-info p {
    margin: 0;
    color: var(--neu-text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
  }
  
  .chart-hover-indicator {
    position: absolute;
    bottom: 1.5rem;
    right: 1.5rem;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--neu-bg);
    box-shadow: var(--neu-shadow-sm);
    display: flex;
    align-items: center;
    justify-content: center;
    transform: translateX(60px);
    opacity: 0;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .chart-hover-indicator svg {
    color: var(--neu-accent);
  }

  @media (max-width: 768px) {
    .hero {
      padding: 4rem 1rem 3rem;
    }
    
    .hero-content {
      padding: 2rem;
    }
    
    .hero-actions {
      flex-direction: column;
      width: 100%;
    }
    
    .neu-button {
      width: 100%;
      text-align: center;
    }
    
    .charts-grid {
      grid-template-columns: 1fr;
      padding: 1rem;
    }
    
    .orb {
      filter: blur(60px);
    }
  }
</style>